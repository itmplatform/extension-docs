[
    {
      "_id": {
        "$oid": "5f845a742dc2690c4025c7c8"
      },
      "name": "itm-jira3",
      "svgString": "<svg xmlns='http://www.w3.org/2000/svg' width='64' x='0px' y='0px' viewBox='0 0 73.3 75.8' style='enable-background:new 0 0 73.3 75.8;' xml:space='preserve'> <style type='text/css'> .st0{fill:#2684FF;} .st1{fill:url(#SVGID_1_);} .st2{fill:url(#SVGID_2_);} </style> <title>Jira Software-blue</title> <g> <g id='Blue'> <path class='st0' d='M72.4,35.8L39.8,3.2L36.6,0l0,0L12.1,24.5l0,0L0.9,35.8c-1.2,1.2-1.2,3.1,0,4.2l22.4,22.4l13.3,13.3 l24.5-24.5l0.4-0.4L72.4,40C73.6,38.8,73.6,36.9,72.4,35.8z M36.6,49.1L25.4,37.9l11.2-11.2l11.2,11.2L36.6,49.1z'/> <linearGradient id='SVGID_1_' gradientUnits='userSpaceOnUse' x1='34.6324' y1='62.655' x2='18.9924' y2='47.015' gradientTransform='matrix(1 0 0 -1 0 78)'> <stop offset='0.18' style='stop-color:#0052CC'/> <stop offset='1' style='stop-color:#2684FF'/> </linearGradient> <path class='st1' d='M36.6,26.7c-7.3-7.3-7.4-19.2-0.1-26.6L12,24.6l13.3,13.3L36.6,26.7z'/> <linearGradient id='SVGID_2_' gradientUnits='userSpaceOnUse' x1='38.7774' y1='17.72' x2='54.3874' y2='33.33' gradientTransform='matrix(1 0 0 -1 0 78)'> <stop offset='0.18' style='stop-color:#0052CC'/> <stop offset='1' style='stop-color:#2684FF'/> </linearGradient> <path class='st2' d='M47.9,37.8L36.6,49.1c7.4,7.4,7.4,19.3,0,26.7c0,0,0,0,0,0l0,0l24.6-24.6L47.9,37.8z'/> </g> </g> </svg>",
      "details": {
        "title": {
          "en": "ITM Platform to Jira (v3)",
          "es": "ITM Platform hacia Jira (v3)",
          "pt": "ITM Platform para Jira (v3)"
        },
        "version": "0.8",
        "shortDescription": {
          "en": "Synchronizes ITM Platform with Jira API v3",
          "es": "Sincroniza ITM Platform hacia Jira (API v3)",
          "pt": "Sincroniza ITM Platform com Jira(API v3)"
        },
        "longDescription": {
          "en": "It exports projects, tasks, and time estimations from ITM Platform into Jira Software (API v3)",
          "es": "Exporta proyectos, tareas y horas estimadas desde Jira Software hacia ITM Platform",
          "pt": "Exporta projetos, tarefas e tempo estimado da ITM Platform para Jira"
        },
        "updated": "2021-05-25",
        "developer": "ITM Platform"
      },
      "components | modules | features | triggers | elements": [
        {
          "trigger": "event",
          "connector": "itm-jira3",
          "AccountId": "@@AccountId@@",
          "entity": "Task",
          "description": "Task update Event, which will update 'Issue' in Jira Project",
          "condition": "Convert.ToInt32(input.userId) != -99 && Convert.ToInt32(input.JiraProjectId) > 0 && Convert.ToInt32(input.task.JiraTaskId) > 0 && Convert.ToInt32(input.task.KindId) == 3",
          "event": "updated",
          "async": true,
          "actions": [
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}/Tasks/search",
              "method": "POST",
              "description": "(1) Get Task details.",
              "output": "taskdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Details\",\"IsActivity\",\"Type.Id\",\"Priority.Id\",\"EndDate\",\"Efforts.Estimated\",\"Status.Id\",\"JiraId\",\"Creator\" ]},\"filter\": { \"Id\" : {{ input.task.Id }} }}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}",
              "method": "POST",
              "description": "(2) Getting Manager details values for project of ITM.",
              "output": "projectdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Team.Managers.EmailAddress\"]}}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/user/search?query={{ projectdetails.Team.Managers.0.EmailAddress }}",
              "method": "GET",
              "description": "(3) Getting jiraprojectusers for reporter field for first Manager.",
              "payload": "",
              "dataType": "application/json",
              "output": "jiraprojectusers",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/issue/{{ input.task.JiraTaskId}}",
              "method": "PUT",
              "description": "(4) Update jira issue by it's issueId.",
              "payload": "{\"fields\": {\"summary\": \"{{ input.task.Name }}\", \"issuetype\": {\"id\": {{ map config.mapping.issuetype.external taskdetails.list.0.Type.Id }} }, \"priority\": {\"id\": \"{{ map config.mapping.issuepriority.external taskdetails.list.0.Priority.Id }}\" }, \"duedate\": \"{{ date taskdetails.list.0.EndDate 'yyyy-MM-dd'}}\", \"timetracking\": {\"originalEstimate\": {{ timespan taskdetails.list.0.Efforts.Estimated }} } {{#ifEquals jiraprojectusers.0.accountId '' }}{{else}}, \"reporter\": {\"accountId\": \"{{ jiraprojectusers.0.accountId }}\" }{{/ifEquals}} } }",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/issue/{{ input.task.JiraTaskId }}/transitions",
              "method": "GET",
              "description": "(5) Get transition list for issue from jira.",
              "payload": "",
              "dataType": "application/json",
              "output": "issuetransitions",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "map",
              "description": "(6) Mapping output as per requirement for transitions. And this will overwrite previous vaariable 'issuetransitions'.",
              "template": "{ {{#each issuetransitions.transitions}}\"{{ to.id }}\": {{ id}}{{#if @last }}{{ else }},{{/if}}{{/each}} }",
              "dataType": "application/json",
              "output": "issuetransitions"
            },
            {
              "action": "map",
              "description": "(7) Get transition Id for jira issue.",
              "template": "{ \"id\" : \"{{ map issuetransitions (map config.mapping.issuestatus.external taskdetails.list.0.Status.Id) }}\" }",
              "dataType": "application/json",
              "output": "transition"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/issue/{{ input.task.JiraTaskId }}/transitions",
              "method": "POST",
              "condition": "Convert.ToString(transition.id).length > 0",
              "description": "(8) Update transition for issue in jira.",
              "payload": "{\"transition\": {\"id\": {{ transition.id }} } }",
              "dataType": "application/json",
              "output": "result",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            }
          ]
        },
        {
          "trigger": "event",
          "connector": "itm-jira3",
          "AccountId": "@@AccountId@@",
          "entity": "Task",
          "description": "Task insert Event",
          "condition": "Convert.ToInt32(input.JiraProjectId) > 0  && Convert.ToInt32(input.task.KindId) == 3",
          "event": "inserted",
          "async": true,
          "actions": [
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}/Tasks/search",
              "method": "POST",
              "description": "(1) Get Task details.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "output": "taskdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Details\",\"IsActivity\",\"Type.Id\",\"Priority.Id\",\"EndDate\",\"Efforts.Estimated\",\"Status.Id\",\"JiraId\",\"Creator\" ]},\"filter\": { \"Id\" : {{ input.task.Id }} }}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/user/search?query={{ taskdetails.list.0.Creator.EmailAddress }}",
              "method": "GET",
              "description": "(2) Get jira user details by emailAddress.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "payload": "",
              "dataType": "application/json",
              "output": "jirataskusers",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}",
              "method": "POST",
              "description": "(3) Getting Manager details values for project of ITM.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "output": "projectdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Team.Managers.EmailAddress\"]}}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/user/search?query={{ projectdetails.Team.Managers.0.EmailAddress }}",
              "method": "GET",
              "description": "(4) Getting jiraprojectusers for reporter field for first Manager.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "payload": "",
              "dataType": "application/json",
              "output": "jiraprojectusers",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/issue/",
              "method": "POST",
              "description": "(5) Insert jira issue in Jira Project.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "payload": "{\"fields\": {\"project\": { \"id\": \"{{ input.JiraProjectId }}\" }, \"summary\": \"{{ input.task.Name }}\", \"issuetype\": {\"id\": {{ map config.mapping.issuetype.external taskdetails.list.0.Type.Id }} }, \"priority\": {\"id\": \"{{ map config.mapping.issuepriority.external taskdetails.list.0.Priority.Id }}\" }, \"duedate\": \"{{ date taskdetails.list.0.EndDate 'yyyy-MM-dd'}}\", \"timetracking\": {\"originalEstimate\": {{ timespan taskdetails.list.0.Efforts.Estimated }} } {{#ifEquals jiraprojectusers.0.accountId '' }}{{else}}, \"reporter\": {\"accountId\": \"{{ jiraprojectusers.0.accountId }}\" }{{/ifEquals}} {{#ifEquals jirataskusers.0.accountId '' }}{{else}}, \"assignee\": {\"accountId\": \"{{ jirataskusers.0.accountId }}\" }{{/ifEquals}} } }",
              "dataType": "application/json",
              "output": "jiraissue",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}/Tasks/{{ input.task.Id }}?LanguageId=1&&UserId=-99&&IsActivity={{ taskdetails.list.0.IsActivity }}",
              "method": "PATCH",
              "description": "(6) Update jira issue id in ITM for association.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "output": "result",
              "payload": "{\"JiraId\": \"{{ jiraissue.id }}\",\"JiraURL\": \"{{ config.url }}\",\"SynchronizationSource\": \"Jira\" }",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/issue/{{ jiraissue.id }}/transitions",
              "method": "GET",
              "description": "(7) Get transition list for issue from jira.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "payload": "",
              "dataType": "application/json",
              "output": "issuetransitions",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "map",
              "description": "(8) Mapping output as per requirement for transitions.",
              "condition": "Convert.ToBoolean(config.newissueallowed) == true",
              "template": "{ {{#each issuetransitions.transitions}}\"{{ to.id }}\": {{ id}}{{#if @last }}{{ else }},{{/if}}{{/each}} }",
              "dataType": "application/json",
              "output": "issuetransitions"
            },
            {
              "action": "map",
              "description": "(9) Get transition Id for jira issue.",
              "template": "{ \"id\" : \"{{ map issuetransitions (map config.mapping.issuestatus.external taskdetails.list.0.Status.Id) }}\" }",
              "dataType": "application/json",
              "output": "transition"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/issue/{{ input.task.JiraTaskId }}/transitions",
              "method": "POST",
              "condition": "Convert.ToString(transition.id).length > 0",
              "description": "(10) Update transition for issue in jira.",
              "payload": "{\"transition\": {\"id\": {{ transition.id }} } }",
              "dataType": "application/json",
              "output": "result",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            }
          ]
        },
        {
          "trigger": "event",
          "connector": "itm-jira3",
          "AccountId": "@@AccountId@@",
          "entity": "TaskTeam",
          "description": "TaskTeam update Event, which will update 'Issue' in Jira Project",
          "condition": "Convert.ToInt32(input.userId) != -99 && Convert.ToInt32(input.JiraProjectId) > 0",
          "event": "updated",
          "async": true,
          "actions": [
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}/Tasks/search",
              "method": "POST",
              "description": "(1) Get Task details.",
              "output": "taskdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Details\",\"IsActivity\",\"JiraId\",\"KindId\",\"Team\",\"Creator\"]},\"filter\": { \"Id\" : {{ input.task.Id }} }}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/user/search?query={{#ifEquals taskdetails.list.0.Team.Managers.0.EmailAddress '' }}{{#ifEquals taskdetails.list.0.Team.TeamMembers.0.EmailAddress '' }}{{ taskdetails.list.0.Creator.EmailAddress }}{{else}}{{ taskdetails.list.0.Team.TeamMembers.0.EmailAddress }}{{/ifEquals}}{{else}}{{ taskdetails.list.0.Team.Managers.0.EmailAddress }}{{/ifEquals}}",
              "method": "GET",
              "description": "(2) Get jira user details by emailAddress.",
              "condition": "Convert.ToInt32(taskdetails.total) > 0 && Convert.ToInt32(taskdetails.list.First.KindId) == 3",
              "payload": "",
              "dataType": "application/json",
              "output": "jirataskusers",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}",
              "method": "POST",
              "description": "(3) Getting Manager details values for project of ITM.",
              "condition": "Convert.ToInt32(taskdetails.total) > 0 && Convert.ToInt32(taskdetails.list.First.KindId) == 3",
              "output": "projectdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Team.Managers.EmailAddress\"]}}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/user/search?query={{ projectdetails.Team.Managers.0.EmailAddress }}",
              "method": "GET",
              "description": "(4) Getting jiraprojectusers for reporter field for first Manager.",
              "condition": "Convert.ToInt32(taskdetails.total) > 0 && Convert.ToInt32(taskdetails.list.First.KindId) == 3",
              "payload": "",
              "dataType": "application/json",
              "output": "jiraprojectusers",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/issue/{{ taskdetails.list.0.JiraId}}",
              "method": "PUT",
              "description": "(5) Update jira issue by it's issueId.",
              "condition": "Convert.ToInt32(taskdetails.total) > 0 && Convert.ToInt32(taskdetails.list.First.KindId) == 3",
              "payload": "{\"fields\": { {{#ifEquals jiraprojectusers.0.accountId '' }}{{else}}\"reporter\": {\"accountId\": \"{{ jiraprojectusers.0.accountId }}\" }{{/ifEquals}} {{#ifEquals jirataskusers.0.accountId '' }}{{else}}, \"assignee\": {\"accountId\": \"{{ jirataskusers.0.accountId }}\" }{{/ifEquals}} } }",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            }
          ]
        },
        {
          "trigger": "event",
          "connector": "itm-jira3",
          "AccountId": "@@AccountId@@",
          "entity": "Project",
          "description": "project insert Event",
          "condition": "Convert.ToInt32(input.userId) != -99",
          "event": "inserted",
          "async": true,
          "actions": [
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.project.Id }}",
              "method": "POST",
              "description": "(1) Getting Manager details values for project of ITM.",
              "output": "projectdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Team.Managers.EmailAddress\"]}}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/user/search?query={{ projectdetails.Team.Managers.0.EmailAddress }}",
              "method": "GET",
              "description": "(2) Getting Jirausers list for project lead for first Manager.",
              "payload": "",
              "dataType": "application/json",
              "output": "jirausers",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/project",
              "method": "POST",
              "description": "(3) Insert Jira project if already project is available in Jira.",
              "condition": "Convert.ToBoolean(config.newprojectallowed) == true",
              "payload": "{\"key\":\"PR{{ input.project.Id }}\",\"name\":\"{{ input.project.Name }}\",\"projectTypeKey\":\"{{ map config.mapping.projecttype.external input.project.TypeId }}\",\"assigneeType\":\"PROJECT_LEAD\",\"leadAccountId\":\"{{ jirausers.0.accountId }}\",\"description\":\"{{ input.project.Description }}\"}",
              "dataType": "application/json",
              "output": "jiraproject",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.project.Id }}?UserId=-99",
              "method": "PATCH",
              "description": "(4) update ITM Project with newly created Jira Project ID.",
              "condition": "Convert.ToBoolean(config.newprojectallowed) == true",
              "output": "result",
              "payload": "{ \"JiraURL\": \"{{ config.url }}\",\"SynchronizationSource\": \"Jira\",\"JiraId\": \"{{ jiraproject.id }}\" }",
              "dataType": "application/json"
            }
  
          ]
        },
        {
          "trigger": "event",
          "connector": "itm-jira3",
          "AccountId": "@@AccountId@@",
          "entity": "Project",
          "description": "Project update Event, which will only update 'Project' in Jira account",
          "condition": "Convert.ToInt32(input.userId) != -99 && Convert.ToInt32(input.project.JiraProjectId) > 0",
          "event": "updated",
          "async": true,
          "actions": [
            {
              "action": "restcall",
              "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.project.Id }}",
              "method": "POST",
              "description": "(1) Getting Manager details values for project of ITM.",
              "output": "projectdetails",
              "payload": "{\"Columns\": {\"$in\":[\"Id\",\"Name\",\"Team.Managers.EmailAddress\"]}}",
              "dataType": "application/json"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/user/search?query={{ projectdetails.Team.Managers.0.EmailAddress }}",
              "method": "GET",
              "description": "(2) Getting Jirausers list for project lead for first Manager.",
              "payload": "",
              "dataType": "application/json",
              "output": "jirausers",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            },
            {
              "action": "restcall",
              "url": "{{ config.url }}/rest/api/3/project/{{ input.project.JiraProjectId }}",
              "method": "PUT",
              "description": "(3) Update Jira project if already project is available in Jira.",
              "payload": "{\"name\":\"{{ input.project.Name }}\",\"projectTypeKey\":\"{{ map config.mapping.projecttype.external input.project.TypeId }}\",\"assigneeType\":\"PROJECT_LEAD\",\"leadAccountId\":\"{{ jirausers.0.accountId }}\",\"description\":\"{{ input.project.Description }}\"}",
              "dataType": "application/json",
              "output": "result",
              "authentication": "basic",
              "username": "{{ config.user }}",
              "password": "{{ config.pass }}"
            }
          ]
        }
      ],
      "config": [
        {
          "name": "isactive",
          "label": {
            "en": "Activate connector",
            "es": "Activar conector",
            "pt": "Ativar o conector"
          },
          "tooltip": {
            "en": "When selected, the connector will be active and will start synchronizing data",
            "es": "Cuando esté seleccionado, el conector estará activo y comenzará a sincronizar datos",
            "pt": "Quando selecionado, o conector estará ativo e começará a sincronizar dados"
          },
          "type": "checkbox",
          "required": false
        },
        {
          "name": "url",
          "label": {
            "en": "Jira URL",
            "es": "URL de Jira",
            "pt": "Jira URL"
          },
          "tooltip": {
            "en": "URL of the JIRA account",
            "es": "URL de la cuenta de JIRA",
            "pt": "URL da conta JIRA"
          },
          "type": "string",
          "required": true
        },
        {
          "name": "user",
          "label": {
            "en": "Username",
            "es": "Nombre de usuario",
            "pt": "Nome de usuário"
          },
          "tooltip": {
            "en": "Username of the JIRA account",
            "es": "Nombre de usuario de la cuenta de JIRA",
            "pt": "Nome de usuário da conta de JIRA"
          },
          "type": "string",
          "required": true
        },
        {
          "name": "pass",
          "label": {
            "en": "Password/API Token",
            "es": "Contraseña / API Token",
            "pt": "Senha / API Token"
          },
          "tooltip": {
            "en": "Password of the JIRA account",
            "es": "Contraseña de la cuenta de JIRA",
            "pt": "Senha da conta de JIRA"
          },
          "type": "password",
          "required": true
        },
        {
          "name": "newprojectallowed",
          "label": {
            "en": "Create project if it doesn't exist in destination",
            "es": "Crear proyecto si no existe en destino",
            "pt": "Criar projeto se ele não existir no destino"
          },
          "tooltip": {
            "en": "If the project does not exist in Jira or in ITM Platform, it will be created",
            "es": "Si el proyecto no existe en Jira o en ITM Platform, se creará",
            "pt": "Se o projeto não existir no Jira ou na ITM Plataform, ele será criado"
          },
          "type": "checkbox",
          "required": false
        },
        {
          "name": "newissueallowed",
          "label": {
            "en": "Create task if it doesn't exist in destination",
            "es": "Crear tarea si no existe en destino",
            "pt": "Criar tarefa se ela não existir no destino"
          },
          "tooltip": {
            "en": "If the issue/task does not exist in Jira or in ITM Platform, it will be created",
            "es": "Si la tarea o issue no existe en Jira o en ITM Platform, se creará",
            "pt": "Se o issue/tarefa não existir no Jira ou na ITM Plataform, ele será criado"
          },
          "type": "checkbox",
          "required": false
        },
        {
          "name": "Header1",
          "label": {
            "en": "You will be able to map fields once the credentials are validated",
            "es": "Podrá crear equivalencias entre campos una vez haya validado susu credenciales",
            "pt": "Você será capaz de mapear os campos assim que as credenciais forem validadas"
          },
          "type": "header",
          "required": false
        }
      ],
      "mapping": [
        {
          "name": "projecttype",
          "label": {
            "en": "Project Type",
            "es": "Tipo de proyecto",
            "pt": "Tipo de Projeto"
          },
          "external": {
            "isFromITM": false,
            "method": "GET",
            "url": "@@url@@/rest/api/3/project/type",
            "authentication": "Basic",
            "user": "@@user@@",
            "pass": "@@pass@@",
            "id": "key",
            "name": "formattedKey",
            "columnName": {
              "en": "Jira",
              "es": "Jira",
              "pt": "Jira"
            }
          },
          "internal": {
            "isFromITM": true,
            "method": "GET",
            "url": "v2/@@companyId@@/GetProjectTypes",
            "id": "Id",
            "name": "Name",
            "columnName": {
              "en": "ITM",
              "es": "ITM",
              "pt": "ITM"
            }
          }
        },
        {
          "name": "issuetype",
          "label": {
            "en": "Issue Type",
            "es": "Tipo de issue",
            "pt": "Tipo de issue"
          },
          "external": {
            "isFromITM": false,
            "method": "GET",
            "url": "@@url@@/rest/api/3/issuetype",
            "authentication": "Basic",
            "user": "@@user@@",
            "pass": "@@pass@@",
            "id": "id",
            "name": "name",
            "columnName": {
              "en": "Jira Issue Type",
              "es": "Jira Tipo Tarea",
              "pt": "Jira Tipo Tarea"
            }
          },
          "internal": {
            "isFromITM": true,
            "method": "GET",
            "url": "v2/@@companyId@@/GetTaskTypes",
            "id": "Id",
            "name": "Name",
            "columnName": {
              "en": "ITM Issue Type",
              "es": "ITM Tipo Tarea",
              "pt": "ITM Tipo Tarea"
            }
          }
        },
        {
          "name": "issuepriority",
          "label": {
            "en": "Issue Priority",
            "es": "Prioridad de issue",
            "pt": "Prioridade de issue"
          },
          "external": {
            "isFromITM": false,
            "method": "GET",
            "url": "@@url@@/rest/api/3/priority",
            "authentication": "Basic",
            "user": "@@user@@",
            "pass": "@@pass@@",
            "id": "id",
            "name": "name",
            "columnName": {
              "en": "Jira",
              "es": "Jira",
              "pt": "Jira"
            }
          },
          "internal": {
            "isFromITM": true,
            "method": "GET",
            "url": "v2/@@companyId@@/GetTaskPriorities",
            "id": "Id",
            "name": "Name",
            "columnName": {
              "en": "ITM",
              "es": "ITM",
              "pt": "ITM"
            }
          }
        },
        {
          "name": "issuestatus",
          "label": {
            "en": "Issue Status",
            "es": "Estado de issue",
            "pt": "Estado da issue"
          },
          "external": {
            "isFromITM": false,
            "method": "GET",
            "url": "@@url@@/rest/api/3/status",
            "authentication": "Basic",
            "user": "@@user@@",
            "pass": "@@pass@@",
            "id": "id",
            "name": "name",
            "columnName": {
              "en": "Jira",
              "es": "Jira",
              "pt": "Jira"
            }
          },
          "internal": {
            "isFromITM": true,
            "method": "GET",
            "url": "v2/@@companyId@@/GetTaskStatuses",
            "id": "Id",
            "name": "Name",
            "columnName": {
              "en": "ITM",
              "es": "ITM",
              "pt": "ITM"
            }
          }
        }
      ]
    }
  ]