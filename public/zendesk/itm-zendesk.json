{
    "name": "76ee1244-77ea-454d-a5f6-c41bc98dd6a2",
    "svgString": "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 960' fill='#03363d'><path class='cls-1' d='M460.68,263.98v273.87h-225.6l225.6-273.87ZM460.68,165.21c0,62.85-50.51,113.36-113.36,113.36s-112.24-50.51-112.24-113.36h225.6ZM497.72,536.73c0-62.85,50.51-113.36,113.36-113.36s113.36,50.51,113.36,113.36h-226.73ZM497.72,439.08V165.21h226.73s-226.73,273.87-226.73,273.87Z'/><path class='cls-1' d='M652.61,724.17c-2.24-15.71-12.35-26.94-30.3-26.94-16.84,0-29.18,10.1-32.55,26.94h62.85ZM624.55,770.19c14.59,0,24.69-5.61,31.43-12.35l15.71,16.84c-10.1,10.1-24.69,17.96-47.14,17.96-38.16,0-62.85-24.69-62.85-59.49s25.82-59.49,58.37-59.49c38.16,0,58.37,29.18,57.24,68.47h-87.55c3.37,17.96,14.59,28.06,34.79,28.06ZM39.77,769.06l68.47-69.59H40.9v-22.45h98.77v22.45l-68.47,69.59h69.59v22.45H39.77v-22.45ZM245.18,724.17c-2.24-15.71-12.35-26.94-30.3-26.94-16.84,0-29.18,10.1-32.55,26.94h62.85ZM218.24,770.19c14.59,0,24.69-5.61,31.43-12.35l15.71,16.84c-10.1,10.1-24.69,17.96-47.14,17.96-38.16,0-62.85-24.69-62.85-59.49s25.82-59.49,58.37-59.49c38.16,0,58.37,29.18,57.24,68.47h-88.67c4.49,17.96,15.71,28.06,35.92,28.06ZM516.8,734.27c0-20.2-15.71-37.04-35.92-37.04s-35.92,15.71-35.92,37.04,15.71,37.04,35.92,37.04,35.92-16.84,35.92-37.04ZM420.27,734.27c0-37.04,26.94-59.49,57.24-59.49,14.59,0,29.18,6.73,38.16,16.84v-67.34h24.69v166.12h-24.69v-15.71c-8.98,11.22-23.57,17.96-38.16,17.96-29.18,1.12-57.24-22.45-57.24-58.37ZM694.14,767.94l22.45-11.22c6.73,10.1,15.71,16.84,29.18,16.84s21.33-6.73,21.33-14.59c0-8.98-13.47-11.22-28.06-14.59-19.08-4.49-39.28-10.1-39.28-33.67,0-17.96,16.84-34.79,43.77-34.79,21.33,0,37.04,7.86,46.02,22.45l-20.2,11.22c-5.61-7.86-14.59-13.47-25.82-13.47-13.47,0-20.2,6.73-20.2,13.47,0,7.86,10.1,10.1,26.94,14.59,19.08,3.37,40.41,10.1,40.41,33.67,0,15.71-13.47,37.04-46.02,37.04-23.57-1.12-40.41-10.1-50.51-26.94ZM856.89,741l-19.08,21.33v29.18h-24.69v-166.12h24.69v108.87l51.63-56.12h29.18l-44.9,48.26,46.02,65.1h-28.06s-34.79-50.51-34.79-50.51ZM347.31,674.78c-29.18,0-52.75,19.08-52.75,49.39v66.22h24.69v-62.85c0-19.08,10.1-30.3,29.18-30.3s26.94,11.22,26.94,30.3v62.85h24.69v-66.22c0-30.3-24.69-49.39-52.75-49.39Z'/></svg>",
    "details": {
        "title": {
            "en": "Zendesk Connector",
            "es": "Conector Zendesk",
            "pt": "Conector Zendesk"
        },
        "version": "1.0.0",
        "shortDescription": {
            "en": "Creates an ITM Platform task for each new Zendesk ticket and keeps statuses in sync bidirectionally",
            "es": "Crea una tarea en ITM Platform por cada nuevo ticket de Zendesk y mantiene los estados sincronizados en ambas direcciones",
            "pt": "Cria uma tarefa na ITM Platform para cada novo ticket do Zendesk e mantém os status sincronizados bidirecionalmente"
        },
        "longDescription": {
            "en": "Creates an ITM Platform task for each new Zendesk ticket and keeps statuses in sync bidirectionally",
            "es": "Crea una tarea en ITM Platform por cada nuevo ticket de Zendesk y mantiene los estados sincronizados en ambas direcciones",
            "pt": "Cria uma tarefa na ITM Platform para cada novo ticket do Zendesk e mantém os status sincronizados bidirecionalmente"
        }
    },
    "features": [
        {
            "trigger": "event",
            "connector": "76ee1244-77ea-454d-a5f6-c41bc98dd6a2",
            "AccountId": "@@AccountId@@",
            "entity": "Task",
            "description": "Task update Event, which will update 'Ticket' in Ticketing Platform",
            "condition": "input.diff != null && input.diff.StatusId != null && input.diff.StatusId.new != null && Convert.ToInt32(input.diff.StatusId.new) != 0 && Convert.ToInt32(input.userId) != -99",
            "event": "updated",
            "async": true,
            "actions": [
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}/Tasks/{{ input.task.Id }}",
                    "method": "POST",
                    "description": "(1) Getting CustomFields values for project of ITM.",
                    "output": "customfields",
                    "payload": "{\"columns\":{\"$in\":[\"AllCustomFields\"]}}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/api/v2/users/search.json?query={{ config.front_desk_support_email }}",
                    "method": "GET",
                    "payload": "",
                    "description": "Get Ticketing User List",
                    "output": "frontDeskSupportUsersOutput",
                    "dataType": "application/json",
                    "authentication": "basic",
                    "username": "{{ config.email }}/token",
                    "password": "{{ config.token }}"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/api/v2/tickets/{{ int customfields.AllCustomFields.TicketId }}.json",
                    "method": "PATCH",
                    "description": "Update Ticket",
                    "output": "ticketResponse",
                    "condition": "input.diff != null && input.diff.StatusId != null && input.diff.StatusId.new != null && Convert.ToInt32(input.diff.StatusId.new) == {{config.ready_to_reply_status_id}} && frontDeskSupportUsersOutput != null && Convert.ToInt32(frontDeskSupportUsersOutput.count) > 0 && customfields.AllCustomFields != null && Convert.ToString(customfields.AllCustomFields.TicketId) != null",
                    "payload": "{\"ticket\":{\"assignee_id\":\"{{ frontDeskSupportUsersOutput.users.0.id }}\",\"public\":false}}}",
                    "dataType": "application/json",
                    "authentication": "basic",
                    "username": "{{ config.email }}/token",
                    "password": "{{ config.token }}"
                }
            ]
        },
        {
            "trigger": "webhook",
            "connector": "76ee1244-77ea-454d-a5f6-c41bc98dd6a2",
            "AccountId": "@@AccountId@@",
            "description": "Create or Update Task in ITM from Ticketing platform",
            "condition": "input.ticket != null && Convert.ToInt32(input.ticket.id) != 0",
            "event": "updated",
            "async": true,
            "actions": [
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/Search",
                    "method": "POST",
                    "condition": "input.ticket != null && Convert.ToInt32(input.ticket.id) != 0 && Convert.ToString(input.ticket.ticketAssigneeEmail) != \"\"",
                    "description": "Getting Project Team Members",
                    "output": "teamMembers",
                    "payload": "{\"columns\":{\"$in\":[\"Team.TeamMembers\",\"Team.Managers\"]},\"Filter\":{\"id\":{{  config.projectId }},\"Team.TeamMembers.EmailAddress\":\"{{ input.ticket.ticketAssigneeEmail }}\"}}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/Search",
                    "method": "POST",
                    "condition": "input.ticket != null && Convert.ToInt32(input.ticket.id) != 0 && Convert.ToString(input.ticket.ticketAssigneeEmail) != \"\" && Convert.ToInt32(teamMembers.total) == 0",
                    "description": "Getting Project Team Members",
                    "output": "teamMembers",
                    "payload": "{\"columns\":{\"$in\":[\"Team.TeamMembers\",\"Team.Managers\"]},\"Filter\":{\"id\":{{  config.projectId }},\"Team.Managers.EmailAddress\":\"{{ input.ticket.ticketAssigneeEmail }}\"}}",
                    "dataType": "application/json"
                },
                {
                    "action": "validate",
                    "validateCondition": "input.ticket != null && Convert.ToInt32(input.ticket.id) != 0 && Convert.ToString(input.ticket.ticketAssigneeEmail) != \"\" && Convert.ToString(input.ticket.ticketAssigneeEmail) != Convert.ToString(config.front_desk_support_email) && (Convert.ToInt32(teamMembers.total) == 0)",
                    "message": "The ticket assignee must be a member of the project team or the front-desk support email. Please update the assignee before proceeding."
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/tasks/CustomFields",
                    "method": "GET",
                    "description": "Get Project Task Custom Fields",
                    "output": "AllCustomFieldsOutput",
                    "condition": "input.ticket != null && Convert.ToInt32(input.ticket.id) != 0 && Convert.ToString(input.ticket.ticketAssigneeEmail) != \"\"",
                    "payload": "",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/api/v2/tickets/{{ input.ticket.id }}/comments.json?sort_order=desc",
                    "method": "GET",
                    "payload": "",
                    "description": "Get All Custom Fields",
                    "output": "ticketDescription",
                    "dataType": "application/json",
                    "authentication": "basic",
                    "username": "{{ config.email }}/token",
                    "password": "{{ config.token }}"
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ config.projectId }}/Tasks/{{ input.ticket.ITMTaskId }}?UserId=-99&LanguageId=@@LanguageId@@",
                    "method": "PATCH",
                    "description": "Update Existing Task",
                    "output": "taskOutput",
                    "condition": "input.ticket != null && Convert.ToInt32(input.ticket.id) != 0 && Convert.ToString(input.ticket.ticketAssigneeEmail) != \"\" && input.ticket.ITMTaskId != null && Convert.ToString(input.ticket.ITMTaskId) != \"\"",
                    "payload": "{\"Name\":\"{{input.ticket.name}}\",\"StatusId\":\"{{ config.initial_status_id }}\",\"Details\":\"{{EscapeDoubleQuotes ticketDescription.comments.0.html_body }}\",\"TaskMembers\":\"{{ input.ticket.ticketAssigneeEmail }}\"}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ config.projectId }}/Tasks?UserId=-99&LanguageId=@@LanguageId@@",
                    "method": "POST",
                    "description": "Create New Task",
                    "output": "taskOutput",
                    "payload": "{\"Name\":\"{{input.ticket.name}}\",\"StatusId\":\"{{ config.initial_status_id }}\",\"Details\":\"{{EscapeDoubleQuotes ticketDescription.comments.0.html_body}}\",\"TaskMembers\":\"{{ input.ticket.ticketAssigneeEmail }}\",\"CustomField\":[ {{#ifEquals AllCustomFieldsOutput.Name 'TicketId'}}  {{else}} {\"CustomFieldBaseId\":{{ mapArray AllCustomFieldsOutput 'Name' 'TicketId' 'Id'}},\"CustomFieldValue\":\"{{ input.ticket.id }}\",\"CustomFieldTypeName\":\"Text\"} {{/ifEquals}}],\"KindId\":3}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/api/v2/ticket_fields",
                    "method": "GET",
                    "payload": "",
                    "description": "Get All Custom Fields",
                    "output": "zendeskCustomFieldList",
                    "dataType": "application/json",
                    "condition": "taskOutput != null && Convert.ToInt64(taskOutput.Id) > 0",
                    "authentication": "basic",
                    "username": "{{ config.email }}/token",
                    "password": "{{ config.token }}"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/api/v2/tickets/{{ input.ticket.id }}.json",
                    "method": "PUT",
                    "description": "Update Ticket Custom field",
                    "output": "ticketResponse",
                    "condition": "taskOutput != null && Convert.ToInt64(taskOutput.Id) > 0",
                    "payload": "{\"ticket\":{\"custom_fields\":[{\"id\":{{ mapArray zendeskCustomFieldList.ticket_fields 'title' 'ITMTaskId' 'id' }},\"value\":\"{{ taskOutput.Id }}\"}]}}",
                    "dataType": "application/json",
                    "authentication": "basic",
                    "username": "{{ config.email }}/token",
                    "password": "{{ config.token }}"
                }
            ]
        }
    ],
    "config": [
        {
            "name": "isactive",
            "label": {
                "en": "Activate extension",
                "es": "Activar extensión",
                "pt": "Ativar extensão"
            },
            "tooltip": {
                "en": "Activate extension to start syncing tasks between ITM Platform and Zendesk",
                "es": "Active la extensión para comenzar a sincronizar tareas entre ITM Platform y Zendesk",
                "pt": "Ative a extensão para começar a sincronizar tarefas entre a ITM Platform e o Zendesk"
            },
            "type": "checkbox",
            "required": false
        },
        {
            "name": "url",
            "label": {
                "en": "Zendesk URL",
                "es": "URL de Zendesk",
                "pt": "Zendesk URL"
            },
            "tooltip": {
                "en": "URL of the Zendesk account",
                "es": "URL de la cuenta de Zendesk",
                "pt": "URL da conta Zendesk"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "email",
            "label": {
                "en": "Zendesk email",
                "es": "Zendesk email",
                "pt": "Zendesk email"
            },
            "tooltip": {
                "en": "Zendesk email",
                "es": "Zendesk email",
                "pt": "Zendesk email"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "front_desk_support_email",
            "label": {
                "en": "Support email",
                "es": "Email de soporte",
                "pt": "E-mail de suporte"
            },
            "tooltip": {
                "en": "Support email in Zendesk",
                "es": "Email de soporte en Zendesk",
                "pt": "E-mail de suporte no Zendesk"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "token",
            "label": {
                "en": "API Token",
                "es": "API Token",
                "pt": "API Token"
            },
            "tooltip": {
                "en": "API Token of the Zendesk account",
                "es": "Token API de la cuenta Zendesk",
                "pt": "Token API da conta Zendesk"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "projectId",
            "label": {
                "en": "Project Id",
                "es": "Project Id",
                "pt": "Project Id"
            },
            "tooltip": {
                "en": "Project Id where tasks will be created. Agile projects only.",
                "es": "Project Id donde se crearán las tareas. Solo proyectos ágiles.",
                "pt": "Project Id onde as tarefas serão criadas. Apenas projetos ágeis."
            },
            "type": "string",
            "required": true
        },
        {
            "name": "initial_status_id",
            "label": {
                "en": "Intial Status Id",
                "es": "Id del estado (columna) inicial",
                "pt": "Intial Status Id"
            },
            "type": "dropdown",
            "required": true,
            "data": {
                "isFromITM": true,
                "method": "GET",
                "url": "v2/@@companyId@@/Projects/@@projectId@@/GetKanbanTaskStatus",
                "id": "Id",
                "name": "Name",
                "columnName": {
                    "en": "ITM",
                    "es": "ITM",
                    "pt": "ITM"
                }
            },
            "tooltip": {
                "en": "Initial status of the task in ITM Platform",
                "es": "Estado inicial de la tarea en ITM Platform",
                "pt": "Status inicial da tarefa no ITM Platform"
            }
        },
        {
            "name": "ready_to_reply_status_id",
            "label": {
                "en": "Initial Status",
                "es": "Estado inicial",
                "pt": "Status inicial"
            },
            "tooltip": {
                "en": "Status (column) that will indicate the ticket is done",
                "es": "Estado (columna) que indicará que el ticket está hecho",
                "pt": "Status (coluna) que indicará que o ticket está feito"
            },
            "type": "dropdown",
            "required": true,
            "data": {
                "isFromITM": true,
                "method": "GET",
                "url": "v2/@@companyId@@/Projects/@@projectId@@/GetKanbanTaskStatus",
                "id": "Id",
                "name": "Name",
                "columnName": {
                    "en": "ITM",
                    "es": "ITM",
                    "pt": "ITM"
                }
            }
        },
        {
            "name": "HeaderConfigureTicketing",
            "label": {
                "en": "Before using the connector, you must configure Zendesk's webhook and triggers. Visit https://github.com/itmplatform/extension-docs/blob/main/public/zendesk/zendesk-configuration.md for more information.",
                "es": "Antes de usar el conector, debe configurar el webhook y los disparadores de Zendesk. Visite https://github.com/itmplatform/extension-docs/blob/main/public/zendesk/zendesk-configuration.md para obtener más información.",
                "pt": "Antes de usar o conector, você deve configurar o webhook e os gatilhos do Zendesk. Visite https://github.com/itmplatform/extension-docs/blob/main/public/zendesk/zendesk-configuration.md para obter mais informações."
            },
            "type": "header",
            "required": false
        }
    ],
    "updated": "2025-03-10"
}