{
    "name": "216470e2-73ac-4110-bf9c-9289d0cc65db",
    "svgString": "<svg viewBox='0 0 138 169' fill='none' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M65.8609 57.4716C74.0176 49.0586 74.0176 35.4129 65.8609 27L28.1175 65.9318C19.9608 74.3447 19.9608 87.9904 28.1175 96.4033L65.8609 57.4716ZM28.1984 140.696C20.0417 132.283 20.0417 118.638 28.1984 110.225L108.882 27C117.039 35.4129 117.039 49.0586 108.882 57.4716L28.1984 140.696ZM71.1324 141C62.9757 132.587 62.9757 118.941 71.1324 110.528L108.876 71.5967C117.032 80.0096 117.032 93.6553 108.876 102.068L71.1324 141Z' fill='#304DDB'/></svg>",
    "details": {
        "title": {
            "en": "Help Scout Connector",
            "es": "Conector Help Scout",
            "pt": "Conector Help Scout"
        },
        "version": "1.0",
        "shortDescription": {
            "en": "Creates an ITM Platform task for each new Help Scout ticket and keeps statuses in sync bidirectionally",
            "es": "Crea una tarea en ITM Platform por cada nuevo ticket de Help Scout y mantiene los estados sincronizados en ambas direcciones",
            "pt": "Cria uma tarefa na ITM Platform para cada novo ticket do Help Scout e mantém os status sincronizados bidirecionalmente"
        },
        "longDescription": {
            "en": "Creates an ITM Platform task for each new Help Scout ticket and keeps statuses in sync bidirectionally",
            "es": "Crea una tarea en ITM Platform por cada nuevo ticket de Help Scout y mantiene los estados sincronizados en ambas direcciones",
            "pt": "Cria uma tarefa na ITM Platform para cada novo ticket do Help Scout e mantém os status sincronizados bidirecionalmente"
        }
    },
    "features": [
        {
            "trigger": "event",
            "connector": "216470e2-73ac-4110-bf9c-9289d0cc65db",
            "AccountId": "@@AccountId@@",
            "entity": "Task",
            "description": "Task update Event, which will update 'Ticket' in Ticketing Platform",
            "condition": "input.diff != null && input.diff.StatusId != null && input.diff.StatusId.new != null && Convert.ToInt32(input.diff.StatusId.new) != 0 && Convert.ToInt32(input.userId) != -99",
            "event": "updated",
            "async": true,
            "actions": [
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ input.projectId }}/Tasks/{{ input.task.Id }}",
                    "method": "POST",
                    "description": "(1) Getting CustomFields values for project of ITM.",
                    "output": "customfields",
                    "payload": "{\"columns\":{\"$in\":[\"AllCustomFields\"]}}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/v2/oauth2/token",
                    "method": "POST",
                    "payload": "{\"grant_type\":\"client_credentials\",\"client_id\":\"{{ config.client_id }}\",\"client_secret\":\"{{ config.client_secret }}\"}",
                    "description": "Get Ticketing User List",
                    "output": "authToken",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/v2/users?email={{ config.front_desk_support_email }}",
                    "method": "GET",
                    "payload": "",
                    "description": "Get Ticketing User List",
                    "output": "frontDeskSupportUsersOutput",
                    "dataType": "application/json",
                    "headers": "{\"Authorization\": \"Bearer {{authToken.access_token}}\"}"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/v2/conversations/{{ customfields.AllCustomFields.TicketId }}",
                    "method": "PATCH",
                    "description": "Update Ticket",
                    "condition": "input.diff != null && input.diff.StatusId != null && input.diff.StatusId.new != null && Convert.ToInt32(input.diff.StatusId.new) == {{config.ready_to_reply_status_id}} && frontDeskSupportUsersOutput != null && Convert.ToInt32(frontDeskSupportUsersOutput.page.number) > 0 && customfields.AllCustomFields != null && Convert.ToString(customfields.AllCustomFields.TicketId) != null",
                    "payload": "{\"op\":\"replace\",\"path\":\"/assignTo\",\"value\":\"{{ frontDeskSupportUsersOutput._embedded.users.0.id }}\"}",
                    "dataType": "application/json",
                    "authentication": "bearer",
                    "headers": "{\"Authorization\": \"Bearer {{authToken.access_token}}\"}"
                }
            ]
        },
        {
            "trigger": "webhook",
            "connector": "216470e2-73ac-4110-bf9c-9289d0cc65db",
            "AccountId": "@@AccountId@@",
            "description": "Create or Update Task in ITM from Ticketing platform",
            "condition": "input.id != null && Convert.ToInt64(input.id) != 0",
            "event": "updated",
            "async": true,
            "authentication": false,
            "actions": [
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/Search",
                    "method": "POST",
                    "condition": "input.id != null && Convert.ToInt64(input.id) != 0 && Convert.ToString(input.assignee.email) != \"\"",
                    "description": "Getting Project Team Members",
                    "output": "teamMembers",
                    "payload": "{\"columns\":{\"$in\":[\"Team.TeamMembers\",\"Team.Managers\"]},\"Filter\":{\"id\":{{ config.projectId }},\"Team.TeamMembers.EmailAddress\":\"{{ input.assignee.email }}\"}}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/Search",
                    "method": "POST",
                    "condition": "input.id != null && Convert.ToInt64(input.id) != 0 && Convert.ToString(input.assignee.email) != \"\" && Convert.ToInt32(teamMembers.total) == 0",
                    "description": "Getting Project Team Members",
                    "output": "teamMembers",
                    "payload": "{\"columns\":{\"$in\":[\"Team.TeamMembers\",\"Team.Managers\"]},\"Filter\":{\"id\":{{ config.projectId }},\"Team.Managers.EmailAddress\":\"{{ input.assignee.email }}\"}}",
                    "dataType": "application/json"
                },
                {
                    "action": "validate",
                    "validateCondition": "input.id != null && Convert.ToInt64(input.id) != 0 && Convert.ToString(input.assignee.email) != \"\" && Convert.ToString(input.assignee.email) != Convert.ToString(config.front_desk_support_email) && (Convert.ToInt32(teamMembers.total) == 0)",
                    "message": "The ticket assignee must be a member of the project team or the front-desk support email. Please update the assignee before proceeding."
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/tasks/CustomFields",
                    "method": "GET",
                    "description": "Get Project Task Custom Fields",
                    "output": "AllCustomFieldsOutput",
                    "condition": "input.id != null && Convert.ToInt64(input.id) != 0 && Convert.ToString(input.assignee.email) != \"\"",
                    "payload": "",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ config.projectId }}/Tasks/{{  mapArray input.customFields 'name' 'ITMTaskId' 'value' }}?UserId=-99&LanguageId=@@LanguageId@@",
                    "method": "PATCH",
                    "description": "Update Existing Task",
                    "output": "taskOutput",
                    "condition": "input.id != null && Convert.ToInt64(input.id) != 0 && Convert.ToString(input.assignee.email) != \"\" && \"{{  mapArray input.customFields 'name' 'ITMTaskId' 'value' }}\" != \"\"",
                    "payload": "{\"Name\":\"{{input.subject}}\",\"StatusId\":\"{{ config.initial_status_id }}\",\"Details\":{{#ifEquals \"\" (mapArray input._embedded.threads 'type' 'note' 'body' \"\")   }} \"{{#ifEquals \"\" (mapArray input._embedded.threads 'type' 'message' 'body' \"\")   }} {{EscapeDoubleQuotes (mapArray input._embedded.threads 'type' 'customer' 'body') }} {{else}} {{EscapeDoubleQuotes (mapArray input._embedded.threads 'type' 'message' 'body') }} {{/ifEquals}}\"{{else}}\"{{EscapeDoubleQuotes (mapArray input._embedded.threads 'type' 'note' 'body') }}\" {{/ifEquals}},\"TaskMembers\":\"{{ input.assignee.email }}\"}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "@@TaskMS@@/v2/{{ input.accountId }}/Projects/{{ config.projectId }}/Tasks?UserId=-99&LanguageId=@@LanguageId@@",
                    "method": "POST",
                    "description": "Create New Task",
                    "output": "taskOutput",
                    "condition": "input.id != null && Convert.ToInt64(input.id) != 0 && Convert.ToString(input.assignee.email) != \"\" && \"{{  mapArray input.customFields 'name' 'ITMTaskId' 'value' }}\" == \"\"",
                    "payload": "{\"Name\":\"{{input.subject}}\",\"StatusId\":\"{{ config.initial_status_id }}\",\"Details\":{{#ifEquals \"\" (mapArray input._embedded.threads 'type' 'message' 'body' \"\")   }} \"{{EscapeDoubleQuotes (mapArray input._embedded.threads 'type' 'customer' 'body') }}\"{{else}}\"{{EscapeDoubleQuotes (mapArray input._embedded.threads 'type' 'message' 'body') }}\" {{/ifEquals}},\"TaskMembers\":\"{{ input.assignee.email }}\",\"CustomField\":[ {{#ifEquals AllCustomFieldsOutput.Name 'TicketId'}}  {{else}} {\"CustomFieldBaseId\":{{ mapArray AllCustomFieldsOutput 'Name' 'TicketId' 'Id'}},\"CustomFieldValue\":\"{{ input.id }}\",\"CustomFieldTypeName\":\"Text\"} {{/ifEquals}}],\"KindId\":3}",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/v2/oauth2/token",
                    "method": "POST",
                    "condition": "taskOutput != null && Convert.ToInt64(taskOutput.Id) > 0",
                    "payload": "{\"grant_type\":\"client_credentials\",\"client_id\":\"{{ config.client_id }}\",\"client_secret\":\"{{ config.client_secret }}\"}",
                    "description": "Get authentication access token",
                    "output": "authToken",
                    "dataType": "application/json"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/v2/mailboxes/{{input.mailboxId}}/fields",
                    "method": "GET",
                    "description": "Update ticket custom field",
                    "condition": "taskOutput != null && Convert.ToInt64(taskOutput.Id) > 0",
                    "payload": "",
                    "dataType": "application/json",
                    "authentication": "bearer",
                    "output": "ticketAllCustomFields",
                    "headers": "{\"Authorization\": \"Bearer {{authToken.access_token}}\"}"
                },
                {
                    "action": "restcall",
                    "url": "{{ config.url }}/v2/conversations/{{ input.id }}/fields",
                    "method": "PUT",
                    "description": "Update ticket custom field",
                    "condition": "taskOutput != null && Convert.ToInt64(taskOutput.Id) > 0",
                    "payload": "{\"fields\":[{\"id\":{{ mapArray ticketAllCustomFields._embedded.fields 'name' 'ITMTaskId' 'id' }},\"value\":\"{{ taskOutput.Id }}\"},{\"id\":{{ mapArray ticketAllCustomFields._embedded.fields 'name' 'Request Type' 'id' }},\"value\":\"{{ mapArray input.customFields 'name' 'Request Type' 'value' }}\"},{\"id\":{{ mapArray ticketAllCustomFields._embedded.fields 'name' 'Important Notes' 'id' }},\"value\":\"{{ mapArray input.customFields 'name' 'Important Notes' 'value' }}\"},{\"id\":{{ mapArray ticketAllCustomFields._embedded.fields 'name' 'Priority' 'id' }},\"value\":\"{{ mapArray input.customFields 'name' 'Priority' 'value' }}\"}]}",
                    "dataType": "application/json",
                    "authentication": "bearer",
                    "headers": "{\"Authorization\": \"Bearer {{authToken.access_token}}\"}"
                }
            ]
        }
    ],
    "config": [
        {
            "name": "isactive",
            "label": {
                "en": "Activate extension",
                "es": "Activar extensión",
                "pt": "Ativar extensão"
            },
            "tooltip": {
                "en": "Activate extension to start syncing tasks between ITM Platform and Help Scout",
                "es": "Active la extensión para comenzar a sincronizar tareas entre ITM Platform y Help Scout",
                "pt": "Ative a extensão para começar a sincronizar tarefas entre a ITM Platform e o Help Scout"
            },
            "type": "checkbox",
            "required": false
        },
        {
            "name": "url",
            "label": {
                "en": "Help Scout URL",
                "es": "URL de Help Scout",
                "pt": "Help Scout URL"
            },
            "tooltip": {
                "en": "URL of the Help Scout account",
                "es": "URL de la cuenta de Help Scout",
                "pt": "URL da conta Help Scout"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "front_desk_support_email",
            "label": {
                "en": "Support email",
                "es": "Email de soporte",
                "pt": "E-mail de suporte"
            },
            "tooltip": {
                "en": "Support email in the ticketing platform",
                "es": "Email de soporte en la plataforma de tickets",
                "pt": "E-mail de suporte na plataforma de tickets"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "client_id",
            "label": {
                "en": "Client Id",
                "es": "Client Id",
                "pt": "Client Id"
            },
            "tooltip": {
                "en": "Client Id generated by Help Scout",
                "es": "Client Id generado por Help Scout",
                "pt": "Client Id gerado pelo Help Scout"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "client_secret",
            "label": {
                "en": "Client Secret",
                "es": "Client Secret",
                "pt": "Client Secret"
            },
            "tooltip": {
                "en": "Client Secret generated by Help Scout",
                "es": "Client Secret generado por Help Scout",
                "pt": "Client Secret gerado pelo Help Scout"
            },
            "type": "string",
            "required": true
        },
        {
            "name": "projectId",
            "label": {
                "en": "Project Id",
                "es": "Project Id",
                "pt": "Project Id"
            },
            "tooltip": {
                "en": "Project Id where tasks will be created. Agile projects only.",
                "es": "Project Id donde se crearán las tareas. Solo proyectos ágiles.",
                "pt": "Project Id onde as tarefas serão criadas. Apenas projetos ágeis."
            },
            "type": "string",
            "required": true
        },
        {
            "name": "initial_status_id",
            "label": {
                "en": "Intial Status Id",
                "es": "Intial Status Id",
                "pt": "Intial Status Id"
            },
            "type": "dropdown",
            "data": {
                "isFromITM": true,
                "method": "GET",
                "url": "v2/@@companyId@@/Projects/@@projectId@@/GetKanbanTaskStatus",
                "id": "Id",
                "name": "Name",
                "columnName": {
                    "en": "ITM",
                    "es": "ITM",
                    "pt": "ITM"
                }
            },
            "tooltip": {
                "en": "Initial status of the task in ITM Platform",
                "es": "Estado inicial de la tarea en ITM Platform",
                "pt": "Status inicial da tarefa no ITM Platform"
            }
        },
        {
            "name": "ready_to_reply_status_id",
            "label": {
                "en": "Initial Status",
                "es": "Estado inicial",
                "pt": "Status inicial"
            },
            "tooltip": {
                "en": "Status (column) that will indicate the ticket is done",
                "es": "Estado (columna) que indicará que el ticket está hecho",
                "pt": "Status (coluna) que indicará que o ticket está feito"
            },
            "type": "dropdown",
            "data": {
                "isFromITM": true,
                "method": "GET",
                "url": "v2/@@companyId@@/Projects/@@projectId@@/GetKanbanTaskStatus",
                "id": "Id",
                "name": "Name",
                "columnName": {
                    "en": "ITM",
                    "es": "ITM",
                    "pt": "ITM"
                }
            }
        },
        {
            "name": "HeaderConfigureTicketing",
            "label": {
              "en": "Before using the connector, you must configure Help Scout's webhook and triggers. ",
              "es": "Además de la sincronización y la fecha a partir de la cual los proyectos e issues de Jira deben sincronizarse, puede configurar en el conector qué categorías de proyecto y tipos de issue deben sincronizarse con ITM Platform y cuáles no. También puede establecer la duración predeterminada de los issues o tareas que no tienen fecha de vencimiento en Jira.",
              "pt": "Além da sincronização e da data a partir da qual os projetos e problemas do JIRA devem ser sincronizados, você pode configurar no Conector quais categorias de projetos e tipos de issue devem ser sincronizados com a ITM Plataform  e quais não. Você também pode definir a duração padrão para ocorrências / tarefas que não têm data de vencimento no JIRA."
            },
            "type": "header",
            "required": false
          }
    ],
    "updated": "27-02-2025"
}